{"ast":null,"code":"var _jsxFileName = \"/home/ryotaro_kubo/django_project/timerapp/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const API_HOST = \"http://localhost:3000\";\n  const [csrfToken, setCsrfToken] = useState(undefined);\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch(`${API_HOST}/csrf/`, {\n          credentials: \"include\"\n        });\n        const data = await response.json();\n        setCsrfToken(data.token);\n      } catch (e) {\n        console.error(\"Error fetching CSRF token:\", e);\n      }\n    };\n    fetchCsrfToken();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:8000/api/login/\", {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": csrfToken,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      credentials: \"include\",\n      mode: \"cors\",\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      alert(\"ログインできました!\");\n      login(data.user);\n      navigate(\"/timer\", {\n        replace: true\n      });\n    } else {\n      alert(\"メールアドレスまたはパスワードが間違っています。\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"login-input\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"login-input\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"NATe6u6J4UV3HTjkLZGBSXSn1fU=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","navigate","login","API_HOST","csrfToken","setCsrfToken","undefined","fetchCsrfToken","response","fetch","credentials","data","json","token","e","console","error","handleSubmit","preventDefault","method","headers","body","JSON","stringify","mode","status","alert","user","replace","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ryotaro_kubo/django_project/timerapp/src/components/login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../AuthContext\";\n\nfunction LoginForm() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const API_HOST = \"http://localhost:3000\";\n  const [csrfToken, setCsrfToken] = useState(undefined);\n\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch(`${API_HOST}/csrf/`, {\n          credentials: \"include\",\n        });\n        const data = await response.json();\n        setCsrfToken(data.token);\n      } catch (e) {\n        console.error(\"Error fetching CSRF token:\", e);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:8000/api/login/\", {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": csrfToken,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n      credentials: \"include\",\n      mode: \"cors\",\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      alert(\"ログインできました!\");\n      login(data.user);\n      navigate(\"/timer\", { replace: true });\n    } else {\n      alert(\"メールアドレスまたはパスワードが間違っています。\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"login-input\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"email\"\n        />\n        <input\n          type=\"password\"\n          className=\"login-input\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\" className=\"login-button\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}