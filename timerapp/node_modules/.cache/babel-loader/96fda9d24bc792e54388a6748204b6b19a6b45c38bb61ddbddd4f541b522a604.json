{"ast":null,"code":"var _jsxFileName = \"/home/ryotaro_kubo/django_project/timerapp/src/components/login.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { apiURL } from \"../App\";\nimport { useAuth } from \"../AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const [auth_token, setCookie] = useCookies([\"token\"]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const getJwt = async data => {\n      console.log(data);\n      await axios.post(`${apiURL}auth/jwt/create/`, {\n        email: data.email,\n        password: data.password\n      }).then(function (response) {\n        console.log(response.data.access);\n        setCookie(\"accesstoken\", response.data.access, {\n          path: \"/\"\n        }, {\n          httpOnly: true\n        });\n        setCookie(\"refreshtoken\", response.data.refresh, {\n          path: \"/\"\n        }, {\n          httpOnly: true\n        });\n        navigate.push(\"/\");\n      }).catch(err => {\n        console.log(\"miss\");\n        alert(\"EmailかPasswordが違います\");\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"login-input\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"login-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(LoginForm, \"guggGZY5qUBROf5hNz6HLTA4KN8=\", false, function () {\n  return [useNavigate, useAuth, useCookies];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["axios","React","useState","useCookies","useNavigate","apiURL","useAuth","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","navigate","login","auth_token","setCookie","handleSubmit","e","preventDefault","getJwt","data","console","log","post","then","response","access","path","httpOnly","refresh","push","catch","err","alert","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ryotaro_kubo/django_project/timerapp/src/components/login.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { apiURL } from \"../App\";\nimport { useAuth } from \"../AuthContext\";\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [auth_token, setCookie] = useCookies([\"token\"]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const getJwt = async (data) => {\n      console.log(data);\n      await axios\n        .post(`${apiURL}auth/jwt/create/`, {\n          email: data.email,\n          password: data.password,\n        })\n        .then(function (response) {\n          console.log(response.data.access);\n          setCookie(\n            \"accesstoken\",\n            response.data.access,\n            { path: \"/\" },\n            { httpOnly: true }\n          );\n          setCookie(\n            \"refreshtoken\",\n            response.data.refresh,\n            { path: \"/\" },\n            { httpOnly: true }\n          );\n          navigate.push(\"/\");\n        })\n        .catch((err) => {\n          console.log(\"miss\");\n          alert(\"EmailかPasswordが違います\");\n        });\n    };\n\n    return (\n      <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"login-input\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"email\"\n          />\n          <input\n            type=\"password\"\n            className=\"login-input\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n        </form>\n      </div>\n    );\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}