{"ast":null,"code":"var _jsxFileName = \"/home/ryotaro_kubo/django_project/timerapp/src/components/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../AuthContext\";\n// import \"../styles/LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_HOST = \"http://localhost:3000\";\nfunction LoginForm() {\n  _s();\n  const [email, setEmail] = useState(undefined);\n  const [password, setPassword] = useState(undefined);\n  const [csrfToken, setCsrfToken] = useState(undefined);\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n\n  // useEffect(() => {\n  //   const fetchCsrfToken = async () => {\n  //     try {\n  //       const response = await fetch(`${API_HOST}/csrf/`, {\n  //         credentials: \"include\",\n  //       });\n  //       const data = await response.json();\n  //       setCsrfToken(data.token);\n  //     } catch (e) {\n  //       console.error(\"Error fetching CSRF token:\", e);\n  //     }\n  //   };\n\n  //   fetchCsrfToken();\n  // }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/stopwatch/login/\", {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": csrfToken,\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      login();\n      navigate(\"/timer\");\n    } else {\n      alert(\"メールアドレスまたはパスワードが間違っています\");\n      console.log(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"login-input\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"login-input\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"\\u65B0\\u898F\\u767B\\u9332\\u30DA\\u30FC\\u30B8\\u3078\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"PzH9Sa3J/Rw3GMW1k759abZIlrk=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","API_HOST","LoginForm","_s","email","setEmail","undefined","password","setPassword","csrfToken","setCsrfToken","navigate","login","handleSubmit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","data","json","status","alert","console","log","message","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/ryotaro_kubo/django_project/timerapp/src/components/login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../AuthContext\";\n// import \"../styles/LoginForm.css\";\nconst API_HOST = \"http://localhost:3000\";\n\nfunction LoginForm() {\n  const [email, setEmail] = useState(undefined);\n  const [password, setPassword] = useState(undefined);\n  const [csrfToken, setCsrfToken] = useState(undefined);\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  // useEffect(() => {\n  //   const fetchCsrfToken = async () => {\n  //     try {\n  //       const response = await fetch(`${API_HOST}/csrf/`, {\n  //         credentials: \"include\",\n  //       });\n  //       const data = await response.json();\n  //       setCsrfToken(data.token);\n  //     } catch (e) {\n  //       console.error(\"Error fetching CSRF token:\", e);\n  //     }\n  //   };\n\n  //   fetchCsrfToken();\n  // }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"/stopwatch/login/\", {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": csrfToken,\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n      body: JSON.stringify({ email, password }),\n    });\n\n    const data = await response.json();\n\n    if (response.status === 200) {\n      login();\n      navigate(\"/timer\");\n    } else {\n      alert(\"メールアドレスまたはパスワードが間違っています\");\n      console.log(data.message);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"login-input\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"メールアドレス\"\n        />\n        <input\n          type=\"password\"\n          className=\"login-input\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"パスワード\"\n        />\n        <button type=\"submit\" className=\"login-button\">\n          ログイン\n        </button>\n      </form>\n      <Link to=\"/signup\">新規登録ページへ</Link>\n    </div>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}